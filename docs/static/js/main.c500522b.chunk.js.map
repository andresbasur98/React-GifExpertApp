{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrig.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","protoTypes","PropTypes","func","isRequired","getGifs","categoria","a","url","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrig","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","category","ReactDOM","render","document","getElementById"],"mappings":"wPAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAmB9C,OAEI,0BAAMC,SAbW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAc,OASd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SArBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YA2B/BZ,EAAYe,WAAa,CACrBd,c,OAAee,EAAUC,KAAKC,Y,2BCnCrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCF,EADnC,+DAEAG,MAAMD,GAFN,cAEbE,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QATtB,kBAYZK,GAZY,4CAAH,sDCAPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMT,EAAS,EAATA,IAClC,OACI,yBAAKa,UAAU,0CACX,yBAAKC,IAAMd,EAAMe,IAAMN,IACvB,+BAAMA,EAAN,OCDCO,EAAU,SAAC,GAAiB,IAAhBlB,EAAe,EAAfA,UAAe,ECAZ,SAAEA,GAAgB,IAAD,EAEflB,mBAAS,CAC/BwB,KAAM,GACNa,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAezC,OARAC,qBAAW,WACPvB,EAAQC,GACHuB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CACpBf,KAAMkB,EACNL,SAAS,SAEnB,CAACnB,IAEIoB,EDb0BK,CAAazB,GAAjCY,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAUrB,OACI,oCACA,4BAAKnB,GAEJmB,GAAW,sCACZ,yBAAKJ,UAAU,aAEHH,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACCiB,IAAKjB,EAAIC,IACJD,UEQdkB,EA9BO,WAAM,MAGY7C,mBAAS,CAAC,cAHtB,mBAGjB8C,EAHiB,KAGL/C,EAHK,KASxB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAEA,2CACA,4BAEQ+C,EAAWpB,KAAK,SAACqB,GACb,OAAO,kBAAC,EAAD,CACCH,IAAKG,EACL7B,UAAa6B,UCrB7CC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.c500522b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('')\r\n    \r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault(); // Evitamos que haga el refresh al hacer el submit\r\n\r\n        if( inputValue.trim().length > 0){\r\n            setCategories( cats => [ inputValue,...cats ]);\r\n            setInputValue('');\r\n            \r\n        }\r\n\r\n    }\r\n    \r\n    return (\r\n        \r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                 />\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddCategory.protoTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( categoria ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${categoria}&limit=10&api_key=Mdo31WFMfC9ko6oEFt0B7DK6v4BX9ARy`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nexport const GifGrig = ({categoria}) => {\r\n    // const [images, setimages] = useState([])\r\n    const { data:images, loading } = useFetchGifs(categoria);\r\n    // useEffect( () => {\r\n    //     getGifs(categoria) //Lo estamos importando de los helpers lo hacemos así para que quede más limpio el componente\r\n    //         .then( imgs => setimages(imgs));\r\n    // },[categoria]) // useEffect cargara otra vez la data cuando cambie la [categoria]\r\n\r\n\r\n\r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n        <h3>{categoria}</h3>\r\n\r\n        {loading && <p>Loading</p> }\r\n        <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => \r\n                       <GifGridItem\r\n                        key={img.id} \r\n                        { ...img} //Spred para mandarle todas las propiedades\r\n                        />\r\n                    )\r\n                }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n//Custom hook\r\n\r\nexport const useFetchGifs = ( categoria ) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifs(categoria) //Lo estamos importando de los helpers lo hacemos así para que quede más limpio el componente\r\n            .then( imgs => setstate({\r\n                data: imgs,\r\n                loading: false\r\n            }));\r\n    },[categoria]) // useEffect cargara otra vez la data cuando cambie la [categoria]\r\n\r\n    return state; // { data:[], loading: true };\r\n\r\n}","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrig } from './components/GifGrig';\r\n\r\n\r\nconst GifExpertApp = (() => {\r\n\r\n    // const categories = ['One punch','Samurai X','Dragon Ball']\r\n    const [categories, setCategories] = useState(['One punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories,'Hunter'] )\r\n    // }\r\n    \r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            <button>Agregar</button>\r\n            <ol>\r\n                {\r\n                    categories.map( (category) => {\r\n                        return <GifGrig \r\n                                key={category} \r\n                                categoria = {category}/>\r\n                    })\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}